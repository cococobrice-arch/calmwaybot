import os
import asyncio
import logging
from dotenv import load_dotenv
from aiogram import Bot, Dispatcher, F
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery, FSInputFile

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–æ–≤ (—á—Ç–æ–±—ã journalctl –ø–æ–∫–∞–∑—ã–≤–∞–ª —Å–æ–±—ã—Ç–∏—è)
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")
LINK = os.getenv("LINK_TO_MATERIAL")

if not BOT_TOKEN:
    raise ValueError("BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env")

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()


# –•—ç–Ω–¥–ª–µ—Ä –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(F.text == "/start")
async def cmd_start(message: Message):
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìò –ü–æ–ª—É—á–∏—Ç—å –≥–∞–π–¥", callback_data="get_material")]
    ])
    await message.answer(
        """–ï—Å–ª–∏ –í—ã –∑–∞—à–ª–∏ –≤ —ç—Ç–æ—Ç –±–æ—Ç, –∑–Ω–∞—á–∏—Ç, —Ç—Ä–µ–≤–æ–≥–∞ —É–∂–µ —É—Å–ø–µ–ª–∞ —Å–∏–ª—å–Ω–æ –≤–º–µ—à–∞—Ç—å—Å—è –≤ –í–∞—à—É –∂–∏–∑–Ω—å... –¢–æ —Å–µ—Ä–¥—Ü–µ–±–∏–µ–Ω–∏–µ, —Ç–æ –≥–æ–ª–æ–≤–æ–∫—Ä—É–∂–µ–Ω–∏–µ, —Ç–æ —Å—Ç—Ä–∞—Ö –ø–æ—Ç–µ—Ä—è—Ç—å —Ä–∞—Å—Å—É–¥–æ–∫ üò±

–ù–∞ —Å–∞–º–æ–º –¥–µ–ª–µ –≤—Å—ë –Ω–µ —Ç–∞–∫ —Ö–∞–æ—Ç–∏—á–Ω–æ, –∫–∞–∫ –∫–∞–∂–µ—Ç—Å—è. –≠—Ç–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–º–µ—é—Ç –ø–æ–Ω—è—Ç–Ω—ã–µ, –∏–∑—É—á–µ–Ω–Ω—ã–µ –º–µ—Ö–∞–Ω–∏–∑–º—ã ‚Äî –∏ –∫–æ–≥–¥–∞ –í—ã –ø–æ–π–º—ë—Ç–µ –∏—Ö, –í—ã —Å–º–æ–∂–µ—Ç–µ –≤–∑—è—Ç—å –ø—Ä–æ–∏—Å—Ö–æ–¥—è—â–µ–µ –ø–æ–¥ –∫–æ–Ω—Ç—Ä–æ–ª—å ‚ôªÔ∏è

üìò –Ø ‚Äî –î–º–∏—Ç—Ä–∏–π –ö–æ–º–∞—Ä–æ–≤, –≤—Ä–∞—á-–ø—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–µ–≤—Ç. –Ø –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª –¥–ª—è –í–∞—Å –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π –≥–∞–π–¥, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è, —á—Ç–æ –∑–∞–ø—É—Å–∫–∞–µ—Ç –ø–∞–Ω–∏—á–µ—Å–∫–∏–µ –∞—Ç–∞–∫–∏ –∏ –∫–∞–∫ –ø–µ—Ä–µ—Å—Ç–∞—Ç—å –∏–º –ø–æ–¥—á–∏–Ω—è—Ç—å—Å—è.  
–°–∫–∞—á–∞–π—Ç–µ –µ–≥–æ ‚Äî –∏ –¥–∞–π—Ç–µ –æ—Ç–ø–æ—Ä —Å—Ç—Ä–∞—Ö—É —á–µ—Ä–µ–∑ –∑–Ω–∞–Ω–∏–µ! üí°""",
        reply_markup=kb
    )


# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü–æ–ª—É—á–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª"
@dp.callback_query(F.data == "get_material")
async def send_material(callback: CallbackQuery):
    if LINK and os.path.exists(LINK):
        file = FSInputFile(LINK, filename="–í—ã—Ö–æ–¥ –∏–∑ –ø–∞–Ω–∏—á–µ—Å–∫–æ–≥–æ –∫—Ä—É–≥–∞.pdf")
        await callback.message.answer_document(file, caption="–í–∞—à –≥–∞–π–¥ –≥–æ—Ç–æ–≤ üìò")
        await callback.answer()
    else:
        await callback.message.answer("‚ö†Ô∏è –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        await callback.answer()


# –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—É—Å–∫
async def main():
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω.")
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
